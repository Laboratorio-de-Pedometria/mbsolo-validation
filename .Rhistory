#   (cv_results %>%
#      filter(map_version == "v1-7-3", n_clusters %in% c(0, 30)) %>%
#      ggplot(aes(x = model_for, y = RMSE))+
#      geom_errorbar(stat = "boxplot", width = 0.25)+
#      geom_boxplot(width = 0.5, size = 0.7)+
#      facet_grid(.~cv_nclusters)+
#      scale_y_continuous(limits = c(3000, 5000),
#                         breaks = round(seq(3000, 5000, 400), 3),
#                         labels = round(seq(3000, 5000, 400)/1000, 3))+
#      labs(x = NULL, y = expression(atop("RMSE", (kg~m^-2))))+
#      theme_classic()+
#      theme(text = element_text(family = "serif", size = 12),
#            axis.text = element_text(family = "serif", size = 12),
#            axis.text.x = element_blank(),
#            axis.ticks.x = element_blank(),
#            axis.title = element_text(family = "serif", size = 12, colour = "#000000"),
#            axis.title.y = element_text(angle = 0, hjust = 1, vjust = 0.5)))/
#   (cv_results %>%
#      filter(map_version == "v1-7-3", n_clusters %in% c(0, 30)) %>%
#      ggplot(aes(x = model_for, y = NSE))+
#      geom_errorbar(stat = "boxplot", width = 0.25)+
#      geom_boxplot(width = 0.5, size = 0.7)+
#      facet_grid(.~cv_nclusters)+
#      labs(x = NULL)+
#      scale_y_continuous(limits = c(-0.2, 0.6), breaks = round(seq(-0.2, 0.6, 0.2), 1),
#                         labels = round(seq(-0.2, 0.6, 0.2), 1))+
#      theme_classic()+
#      theme(text = element_text(family = "serif", size = 12),
#            axis.text = element_text(family = "serif", size = 12),
#            axis.text.x = element_blank(),
#            axis.ticks.x = element_blank(),
#            axis.title = element_text(family = "serif", size = 12, colour = "#000000"),
#            axis.title.y = element_text(angle = 0, hjust = 1, vjust = 0.5)))
#
# ggsave(filename = paste0(output_path, "mse_rmse_nse-v1-7-3.png"),
#        width = 148, height = 220, units = "mm", dpi = 300)
## ME e MAE para C1_v000----------
(cv_results %>%
filter(map_version == "C1_v000", n_clusters %in% c(0, 30)) %>% #Filtra os dados
ggplot(aes(x = model_for, y = ME))+ #Cria o ggplot e define os eixos "x" e "y"
geom_errorbar(stat = "boxplot", width = 0.25)+
geom_boxplot(width = 0.5, size = 0.7)+
facet_grid(.~cv_nclusters)+
scale_y_continuous(limits = c(0, 700), breaks = seq(0, 700, 100),
labels = seq(0, 700, 100)/1000)+
labs(x = NULL, y = expression(atop("ME", (kg~m^-2))),
title = "Simulations for the version data: C1_v000 (n = 9531)")+
theme_classic()+
theme(text = element_text(family = "serif", size = 12),
axis.text = element_text(family = "serif", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "serif", size = 12, colour = "#000000"),
axis.title.y = element_text(angle = 0, hjust = 1, vjust = 0.5)))/
(cv_results %>%
filter(map_version == "C1_v000", n_clusters %in% c(0, 30)) %>%
ggplot(aes(x = model_for, y = MAE))+
geom_errorbar(stat = "boxplot", width = 0.25)+
geom_boxplot(width = 0.5, size = 0.7)+
facet_grid(.~cv_nclusters)+
scale_y_continuous(limits = c(1500, 2500), breaks = seq(1500, 2500, 200),
labels = seq(1500, 2500, 200)/1000)+
labs(x = NULL, y = expression(atop("MAE", (kg~m^-2))))+
theme_classic()+
theme(text = element_text(family = "serif", size = 12),
axis.text = element_text(family = "serif", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "serif", size = 12, colour = "#000000"),
axis.title.y = element_text(angle = 0, hjust = 1, vjust = 0.5)))
### Script para gerar os gráficos e mapa de clusters ###
#Data: 2023-12-12
#Autores: Erli dos Santos, Marcos Cardoso e Taciara Horst
#Contato: erlipinto@gmail.com, cardoso.mvs@gmail.com
## Objetivo:
# Este script gera os gráficos e o mapa de clusters a partir dos resultados da validação cruzada stardard e spatial.
#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
require(dplyr) #Para manipulação de dados
require(readxl) #Para leitura de arquivos Excel
require(ggplot2) #Para criação de gráficos
require(patchwork) #Para combinar gráficos
#Define o caminho para o diretório com os arquivos de resultados
data_path <- "results/"
#Define o caminho para o diretório onde serão salvos os arquivos com as figuras
output_path <- "results/figure/"
#Lista todos os arquivos com extensão ".xlsx" no diretório path
list.files(path = data_path, pattern = ".xlsx")
cv_results <- list(                                                                  #Cria uma lista
# read_excel(paste0(data_path, "cross_validation-results_v1-5-0.xlsx")),           #Faz a leitura dos arquivos .xlsx
# read_excel(paste0(data_path, "cross_validation-results_v1-6-0.xlsx")),
# read_excel(paste0(data_path, "cross_validation-results_v1-7-2.xlsx")),
read_excel(paste0("D:/0_Projetos/1_mbsolos-validation/results/2023_12_12_cv_C1_v1_0_0/uniao_cross_validation-results_C1_v1_0_0.xlsx")),
read_excel(paste0("D:/0_Projetos/1_mbsolos-validation/results/2024_03_18_cv_C1_v2_0_0/uniao_cross_validation-results_C1_v2_0_0.xlsx")))%>%
bind_rows() %>%                                                                    #Combina os dataframes lidos da lista em um único dataframe
mutate(cv_nclusters = ifelse(cross_validation == "Standard k-Fold CV",             #Se "cross_validation" for "Standard k-Fold CV", a coluna mantém o mesmo valor.
cross_validation,
paste(cross_validation, "with", n_clusters, "clusters"))) #Se "cross_validation" for diferente, agrega o número de clusters utilizado (e.g., "KMeans with 30 clusters").
# Visualização das métricas -----------------------------------------------------
# # Cada conjunto de código representa uma figura para cada versão.
## ME e MAE para v1-7-3--------------
# (cv_results %>%
#     filter(map_version == "v1-7-3", n_clusters %in% c(0, 30)) %>%
#     ggplot(aes(x = model_for, y = ME))+
#     geom_errorbar(stat = "boxplot", width = 0.25)+
#     geom_boxplot(width = 0.5, size = 0.7)+
#     facet_grid(.~cv_nclusters)+
#     scale_y_continuous(limits = c(0, 700), breaks = seq(0, 700, 100),
#                        labels = seq(0, 700, 100)/1000)+
#     labs(x = NULL, y = expression(atop("ME", (kg~m^-2))),
#          title = "Simulations for the version data: v1-7-3 (n = 9531)")+
#     theme_classic()+
#     theme(text = element_text(family = "serif", size = 12),
#           axis.text = element_text(family = "serif", size = 12),
#           axis.text.x = element_blank(),
#           axis.ticks.x = element_blank(),
#           axis.title = element_text(family = "serif", size = 12, colour = "#000000"),
#           axis.title.y = element_text(angle = 0, hjust = 1, vjust = 0.5)))/
#   (cv_results %>%
#      filter(map_version == "v1-7-3", n_clusters %in% c(0, 30)) %>%
#      ggplot(aes(x = model_for, y = MAE))+
#      geom_errorbar(stat = "boxplot", width = 0.25)+
#      geom_boxplot(width = 0.5, size = 0.7)+
#      facet_grid(.~cv_nclusters)+
#      scale_y_continuous(limits = c(1500, 2500), breaks = seq(1500, 2500, 200),
#                         labels = seq(1500, 2500, 200)/1000)+
#      labs(x = NULL, y = expression(atop("MAE", (kg~m^-2))))+
#      theme_classic()+
#      theme(text = element_text(family = "serif", size = 12),
#            axis.text = element_text(family = "serif", size = 12),
#            axis.text.x = element_blank(),
#            axis.ticks.x = element_blank(),
#            axis.title = element_text(family = "serif", size = 12, colour = "#000000"),
#            axis.title.y = element_text(angle = 0, hjust = 1, vjust = 0.5)))
#
# ggsave(filename = paste0(output_path, "me_and_mae-v1-7-3.png"),
#        width = 148, height = 148, units = "mm", dpi = 600)
## MSE, RMSE e NSE para v1-7-3 --------------
# library(scales)
#
# (cv_results %>%
#     filter(map_version == "v1-7-3", n_clusters %in% c(0, 30)) %>%
#     ggplot(aes(x = model_for, y = MSE))+
#     geom_errorbar(stat = "boxplot", width = 0.25)+
#     geom_boxplot(width = 0.5, size = 0.7)+
#     facet_grid(.~cv_nclusters)+
#     scale_y_continuous(limits = c(13000000, 25000000), labels = scientific)+
#     labs(x = NULL,
#          title = "Simulations for the version data: v1-7-3 (n = 9531)")+
#     theme_classic()+
#     theme(text = element_text(family = "serif", size = 12),
#           axis.text = element_text(family = "serif", size = 12),
#           axis.text.x = element_blank(),
#           axis.ticks.x = element_blank(),
#           axis.title = element_text(family = "serif", size = 12, colour = "#000000"),
#           axis.title.y = element_text(angle = 0, hjust = 1, vjust = 0.5)))/
#   (cv_results %>%
#      filter(map_version == "v1-7-3", n_clusters %in% c(0, 30)) %>%
#      ggplot(aes(x = model_for, y = RMSE))+
#      geom_errorbar(stat = "boxplot", width = 0.25)+
#      geom_boxplot(width = 0.5, size = 0.7)+
#      facet_grid(.~cv_nclusters)+
#      scale_y_continuous(limits = c(3000, 5000),
#                         breaks = round(seq(3000, 5000, 400), 3),
#                         labels = round(seq(3000, 5000, 400)/1000, 3))+
#      labs(x = NULL, y = expression(atop("RMSE", (kg~m^-2))))+
#      theme_classic()+
#      theme(text = element_text(family = "serif", size = 12),
#            axis.text = element_text(family = "serif", size = 12),
#            axis.text.x = element_blank(),
#            axis.ticks.x = element_blank(),
#            axis.title = element_text(family = "serif", size = 12, colour = "#000000"),
#            axis.title.y = element_text(angle = 0, hjust = 1, vjust = 0.5)))/
#   (cv_results %>%
#      filter(map_version == "v1-7-3", n_clusters %in% c(0, 30)) %>%
#      ggplot(aes(x = model_for, y = NSE))+
#      geom_errorbar(stat = "boxplot", width = 0.25)+
#      geom_boxplot(width = 0.5, size = 0.7)+
#      facet_grid(.~cv_nclusters)+
#      labs(x = NULL)+
#      scale_y_continuous(limits = c(-0.2, 0.6), breaks = round(seq(-0.2, 0.6, 0.2), 1),
#                         labels = round(seq(-0.2, 0.6, 0.2), 1))+
#      theme_classic()+
#      theme(text = element_text(family = "serif", size = 12),
#            axis.text = element_text(family = "serif", size = 12),
#            axis.text.x = element_blank(),
#            axis.ticks.x = element_blank(),
#            axis.title = element_text(family = "serif", size = 12, colour = "#000000"),
#            axis.title.y = element_text(angle = 0, hjust = 1, vjust = 0.5)))
#
# ggsave(filename = paste0(output_path, "mse_rmse_nse-v1-7-3.png"),
#        width = 148, height = 220, units = "mm", dpi = 300)
## ME e MAE para C1_v000----------
(cv_results %>%
filter(map_version == "C1_v000", n_clusters %in% c(0, 30)) %>% #Filtra os dados
ggplot(aes(x = model_for, y = ME))+ #Cria o ggplot e define os eixos "x" e "y"
geom_errorbar(stat = "boxplot", width = 0.25)+
geom_boxplot(width = 0.5, size = 0.7)+
facet_grid(.~cv_nclusters)+
scale_y_continuous(limits = c(0, 700), breaks = seq(0, 700, 100),
labels = seq(0, 700, 100)/1000)+
labs(x = NULL, y = expression(atop("ME", (kg~m^-2))),
title = "Simulations for the version data: C1_v000 (n = 9531)")+
theme_classic()+
theme(text = element_text(family = "serif", size = 12),
axis.text = element_text(family = "serif", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "serif", size = 12, colour = "#000000"),
axis.title.y = element_text(angle = 0, hjust = 1, vjust = 0.5)))/
(cv_results %>%
filter(map_version == "C1_v000", n_clusters %in% c(0, 30)) %>%
ggplot(aes(x = model_for, y = MAE))+
geom_errorbar(stat = "boxplot", width = 0.25)+
geom_boxplot(width = 0.5, size = 0.7)+
facet_grid(.~cv_nclusters)+
scale_y_continuous(limits = c(1500, 2500), breaks = seq(1500, 2500, 200),
labels = seq(1500, 2500, 200)/1000)+
labs(x = NULL, y = expression(atop("MAE", (kg~m^-2))))+
theme_classic()+
theme(text = element_text(family = "serif", size = 12),
axis.text = element_text(family = "serif", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "serif", size = 12, colour = "#000000"),
axis.title.y = element_text(angle = 0, hjust = 1, vjust = 0.5)))
### Script para gerar os gráficos e mapa de clusters ###
#Data: 2023-12-12
#Autores: Erli dos Santos, Marcos Cardoso e Taciara Horst
#Contato: erlipinto@gmail.com, cardoso.mvs@gmail.com
## Objetivo:
# Este script gera os gráficos e o mapa de clusters a partir dos resultados da validação cruzada stardard e spatial.
#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
require(dplyr) #Para manipulação de dados
require(readxl) #Para leitura de arquivos Excel
require(ggplot2) #Para criação de gráficos
require(patchwork) #Para combinar gráficos
#Define o caminho para o diretório com os arquivos de resultados
data_path <- "results/"
#Define o caminho para o diretório onde serão salvos os arquivos com as figuras
output_path <- "results/figure/"
#Lista todos os arquivos com extensão ".xlsx" no diretório path
list.files(path = data_path, pattern = ".xlsx")
cv_results <- list(                                                                  #Cria uma lista
# read_excel(paste0(data_path, "cross_validation-results_v1-5-0.xlsx")),           #Faz a leitura dos arquivos .xlsx
# read_excel(paste0(data_path, "cross_validation-results_v1-6-0.xlsx")),
# read_excel(paste0(data_path, "cross_validation-results_v1-7-2.xlsx")),
read_excel(paste0(data_path, "2023_12_12_cv_C1_v1_0_0/uniao_cross_validation-results_C1_v1_0_0.xlsx")),
read_excel(paste0(data_path, "2024_03_18_cv_C1_v2_0_0/uniao_cross_validation-results_C1_v2_0_0.xlsx")))%>%
bind_rows() %>%                                                                    #Combina os dataframes lidos da lista em um único dataframe
mutate(cv_nclusters = ifelse(cross_validation == "Standard k-Fold CV",             #Se "cross_validation" for "Standard k-Fold CV", a coluna mantém o mesmo valor.
cross_validation,
paste(cross_validation, "with", n_clusters, "clusters"))) #Se "cross_validation" for diferente, agrega o número de clusters utilizado (e.g., "KMeans with 30 clusters").
### Script para gerar os gráficos e mapa de clusters ###
#Data: 2023-12-12
#Autores: Erli dos Santos, Marcos Cardoso e Taciara Horst
#Contato: erlipinto@gmail.com, cardoso.mvs@gmail.com
## Objetivo:
# Este script gera os gráficos e o mapa de clusters a partir dos resultados da validação cruzada stardard e spatial.
#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
require(dplyr) #Para manipulação de dados
require(readxl) #Para leitura de arquivos Excel
require(ggplot2) #Para criação de gráficos
require(patchwork) #Para combinar gráficos
#Define o caminho para o diretório com os arquivos de resultados
data_path <- "D:/0_Projetos/1_mbsolos-validation/results/"
#Define o caminho para o diretório onde serão salvos os arquivos com as figuras
output_path <- "D:/0_Projetos/1_mbsolos-validation/results/figure/"
#Lista todos os arquivos com extensão ".xlsx" no diretório path
list.files(path = data_path, pattern = ".xlsx")
cv_results <- list(                                                                  #Cria uma lista
# read_excel(paste0(data_path, "cross_validation-results_v1-5-0.xlsx")),           #Faz a leitura dos arquivos .xlsx
# read_excel(paste0(data_path, "cross_validation-results_v1-6-0.xlsx")),
# read_excel(paste0(data_path, "cross_validation-results_v1-7-2.xlsx")),
read_excel(paste0(data_path, "2023_12_12_cv_C1_v1_0_0/uniao_cross_validation-results_C1_v1_0_0.xlsx")),
read_excel(paste0(data_path, "2024_03_18_cv_C1_v2_0_0/uniao_cross_validation-results_C1_v2_0_0.xlsx")))%>%
bind_rows() %>%                                                                    #Combina os dataframes lidos da lista em um único dataframe
mutate(cv_nclusters = ifelse(cross_validation == "Standard k-Fold CV",             #Se "cross_validation" for "Standard k-Fold CV", a coluna mantém o mesmo valor.
cross_validation,
paste(cross_validation, "with", n_clusters, "clusters"))) #Se "cross_validation" for diferente, agrega o número de clusters utilizado (e.g., "KMeans with 30 clusters").
# Visualização das métricas -----------------------------------------------------
# # Cada conjunto de código representa uma figura para cada versão.
## ME e MAE para v1-7-3--------------
# (cv_results %>%
#     filter(map_version == "v1-7-3", n_clusters %in% c(0, 30)) %>%
#     ggplot(aes(x = model_for, y = ME))+
#     geom_errorbar(stat = "boxplot", width = 0.25)+
#     geom_boxplot(width = 0.5, size = 0.7)+
#     facet_grid(.~cv_nclusters)+
#     scale_y_continuous(limits = c(0, 700), breaks = seq(0, 700, 100),
#                        labels = seq(0, 700, 100)/1000)+
#     labs(x = NULL, y = expression(atop("ME", (kg~m^-2))),
#          title = "Simulations for the version data: v1-7-3 (n = 9531)")+
#     theme_classic()+
#     theme(text = element_text(family = "serif", size = 12),
#           axis.text = element_text(family = "serif", size = 12),
#           axis.text.x = element_blank(),
#           axis.ticks.x = element_blank(),
#           axis.title = element_text(family = "serif", size = 12, colour = "#000000"),
#           axis.title.y = element_text(angle = 0, hjust = 1, vjust = 0.5)))/
#   (cv_results %>%
#      filter(map_version == "v1-7-3", n_clusters %in% c(0, 30)) %>%
#      ggplot(aes(x = model_for, y = MAE))+
#      geom_errorbar(stat = "boxplot", width = 0.25)+
#      geom_boxplot(width = 0.5, size = 0.7)+
#      facet_grid(.~cv_nclusters)+
#      scale_y_continuous(limits = c(1500, 2500), breaks = seq(1500, 2500, 200),
#                         labels = seq(1500, 2500, 200)/1000)+
#      labs(x = NULL, y = expression(atop("MAE", (kg~m^-2))))+
#      theme_classic()+
#      theme(text = element_text(family = "serif", size = 12),
#            axis.text = element_text(family = "serif", size = 12),
#            axis.text.x = element_blank(),
#            axis.ticks.x = element_blank(),
#            axis.title = element_text(family = "serif", size = 12, colour = "#000000"),
#            axis.title.y = element_text(angle = 0, hjust = 1, vjust = 0.5)))
#
# ggsave(filename = paste0(output_path, "me_and_mae-v1-7-3.png"),
#        width = 148, height = 148, units = "mm", dpi = 600)
## MSE, RMSE e NSE para v1-7-3 --------------
# library(scales)
#
# (cv_results %>%
#     filter(map_version == "v1-7-3", n_clusters %in% c(0, 30)) %>%
#     ggplot(aes(x = model_for, y = MSE))+
#     geom_errorbar(stat = "boxplot", width = 0.25)+
#     geom_boxplot(width = 0.5, size = 0.7)+
#     facet_grid(.~cv_nclusters)+
#     scale_y_continuous(limits = c(13000000, 25000000), labels = scientific)+
#     labs(x = NULL,
#          title = "Simulations for the version data: v1-7-3 (n = 9531)")+
#     theme_classic()+
#     theme(text = element_text(family = "serif", size = 12),
#           axis.text = element_text(family = "serif", size = 12),
#           axis.text.x = element_blank(),
#           axis.ticks.x = element_blank(),
#           axis.title = element_text(family = "serif", size = 12, colour = "#000000"),
#           axis.title.y = element_text(angle = 0, hjust = 1, vjust = 0.5)))/
#   (cv_results %>%
#      filter(map_version == "v1-7-3", n_clusters %in% c(0, 30)) %>%
#      ggplot(aes(x = model_for, y = RMSE))+
#      geom_errorbar(stat = "boxplot", width = 0.25)+
#      geom_boxplot(width = 0.5, size = 0.7)+
#      facet_grid(.~cv_nclusters)+
#      scale_y_continuous(limits = c(3000, 5000),
#                         breaks = round(seq(3000, 5000, 400), 3),
#                         labels = round(seq(3000, 5000, 400)/1000, 3))+
#      labs(x = NULL, y = expression(atop("RMSE", (kg~m^-2))))+
#      theme_classic()+
#      theme(text = element_text(family = "serif", size = 12),
#            axis.text = element_text(family = "serif", size = 12),
#            axis.text.x = element_blank(),
#            axis.ticks.x = element_blank(),
#            axis.title = element_text(family = "serif", size = 12, colour = "#000000"),
#            axis.title.y = element_text(angle = 0, hjust = 1, vjust = 0.5)))/
#   (cv_results %>%
#      filter(map_version == "v1-7-3", n_clusters %in% c(0, 30)) %>%
#      ggplot(aes(x = model_for, y = NSE))+
#      geom_errorbar(stat = "boxplot", width = 0.25)+
#      geom_boxplot(width = 0.5, size = 0.7)+
#      facet_grid(.~cv_nclusters)+
#      labs(x = NULL)+
#      scale_y_continuous(limits = c(-0.2, 0.6), breaks = round(seq(-0.2, 0.6, 0.2), 1),
#                         labels = round(seq(-0.2, 0.6, 0.2), 1))+
#      theme_classic()+
#      theme(text = element_text(family = "serif", size = 12),
#            axis.text = element_text(family = "serif", size = 12),
#            axis.text.x = element_blank(),
#            axis.ticks.x = element_blank(),
#            axis.title = element_text(family = "serif", size = 12, colour = "#000000"),
#            axis.title.y = element_text(angle = 0, hjust = 1, vjust = 0.5)))
#
# ggsave(filename = paste0(output_path, "mse_rmse_nse-v1-7-3.png"),
#        width = 148, height = 220, units = "mm", dpi = 300)
## ME e MAE para C1_v000----------
(cv_results %>%
filter(map_version == "C1_v000", n_clusters %in% c(0, 30)) %>% #Filtra os dados
ggplot(aes(x = model_for, y = ME))+ #Cria o ggplot e define os eixos "x" e "y"
geom_errorbar(stat = "boxplot", width = 0.25)+
geom_boxplot(width = 0.5, size = 0.7)+
facet_grid(.~cv_nclusters)+
scale_y_continuous(limits = c(0, 700), breaks = seq(0, 700, 100),
labels = seq(0, 700, 100)/1000)+
labs(x = NULL, y = expression(atop("ME", (kg~m^-2))),
title = "Simulations for the version data: C1_v000 (n = 9531)")+
theme_classic()+
theme(text = element_text(family = "serif", size = 12),
axis.text = element_text(family = "serif", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "serif", size = 12, colour = "#000000"),
axis.title.y = element_text(angle = 0, hjust = 1, vjust = 0.5)))/
(cv_results %>%
filter(map_version == "C1_v000", n_clusters %in% c(0, 30)) %>%
ggplot(aes(x = model_for, y = MAE))+
geom_errorbar(stat = "boxplot", width = 0.25)+
geom_boxplot(width = 0.5, size = 0.7)+
facet_grid(.~cv_nclusters)+
scale_y_continuous(limits = c(1500, 2500), breaks = seq(1500, 2500, 200),
labels = seq(1500, 2500, 200)/1000)+
labs(x = NULL, y = expression(atop("MAE", (kg~m^-2))))+
theme_classic()+
theme(text = element_text(family = "serif", size = 12),
axis.text = element_text(family = "serif", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "serif", size = 12, colour = "#000000"),
axis.title.y = element_text(angle = 0, hjust = 1, vjust = 0.5)))
require(dplyr)
require(readxl)
require(ggplot2)
require(patchwork)
data_path <- "D:/0_Projetos/1_mbsolos-validation/results/uniao/"
output_path <- "D:/0_Projetos/1_mbsolos-validation/results/figure/"
list.files(path = data_path, pattern = ".xlsx")
cv_results <- list(
read_excel(paste0(data_path, "uniao_cross_validation-results_C1_v1_0_0.xlsx")),
read_excel(paste0(data_path, "uniao_cross_validation-results_C1_v2_0_0.xlsx"))) %>%
bind_rows() %>%
mutate(cv_nclusters = ifelse(cross_validation == "Standard k-Fold CV",
cross_validation,
paste(cross_validation, "with", n_clusters, "clusters")))
# Visualizing metrics -----------------------------------------------------
## ME e MAE para C1-v000
(cv_results %>%
filter(map_version == "C1-v000", n_clusters %in% c(0, 30)) %>%
ggplot(aes(x = model_for, y = ME))+
geom_errorbar(stat = "boxplot", width = 0.25)+
geom_boxplot(width = 0.5, size = 0.7)+
facet_grid(.~cv_nclusters)+
scale_y_continuous(limits = c(0, 700), breaks = seq(0, 700, 100),
labels = seq(0, 700, 100)/1000)+
labs(x = NULL, y = expression(atop("ME", (kg~m^-2))),
title = "Simulations for the version data: C1-v000 (n = 9633)")+
theme_classic()+
theme(text = element_text(family = "serif", size = 12),
axis.text = element_text(family = "serif", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "serif", size = 12, colour = "#000000"),
axis.title.y = element_text(angle = 0, hjust = 1, vjust = 0.5)))/
(cv_results %>%
filter(map_version == "C1-v000", n_clusters %in% c(0, 30)) %>%
ggplot(aes(x = model_for, y = MAE))+
geom_errorbar(stat = "boxplot", width = 0.25)+
geom_boxplot(width = 0.5, size = 0.7)+
facet_grid(.~cv_nclusters)+
scale_y_continuous(limits = c(1500, 2500), breaks = seq(1500, 2500, 200),
labels = seq(1500, 2500, 200)/1000)+
labs(x = NULL, y = expression(atop("MAE", (kg~m^-2))))+
theme_classic()+
theme(text = element_text(family = "serif", size = 12),
axis.text = element_text(family = "serif", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "serif", size = 12, colour = "#000000"),
axis.title.y = element_text(angle = 0, hjust = 1, vjust = 0.5)))
original_data <- read_csv(paste0(input_data_path, "/matriz_soc_obs_C1_v2_0_0.csv"))
require(dplyr)       # Para manipulação de dados
require(readxl)      # Para leitura de arquivos Excel
require(writexl)    # Para escrita de arquivos Excel
require(readr)       # Para leitura de dados
require(tidyr)       # Para manipulação de dados (e.g., spread, gather)
require(tibble)      # Para criação de tibbles (data frames)
require(yardstick)   # Para avaliação de modelos de aprendizado de máquina
require(caret)       # Para treinamento e avaliação de modelos
require(ranger)      # Para treinamento de modelos de florestas aleatórias
library(magrittr)    # Para operações pipe (%>%)
# Definindo a versão dos dados em uso
data_version <- "C1_v001-year"
# Criando o caminho para os resultados de validação cruzada
cv_results_path <- "/results/2024_03_18_cv_C1_v2_0_0/"
# Listando arquivos .xlsx no caminho especificado
list.files(path = cv_results_path, pattern = ".xlsx")
# Cross-validation results ------------------------------------------------
# Carregando e organizando resultados da validação cruzada de diferentes modelos
cv_results <- list(
# Resultados da validação cruzada k-Fold comum
rf__kFold_results = read_excel(
paste0(cv_results_path, "D:/0_Projetos/1_mbsolos-validation/results/2024_03_18_cv_C1_v2_0_0/rf-kFold-results.xlsx")) %>%
mutate(cross_validation = "Standard k-Fold CV", model_for = "random forest", n_clusters = 0),
#  # Resultados da validação cruzada Spatial com diferentes números de clusters
#   ## 10 clusters
# read_excel(
#   paste0(cv_results_path, "/rf-10_clusters-spatial-kFold-results.xlsx")) %>%
#   mutate(cross_validation = "Spatial k-Fold CV", model_for = "random forest", n_clusters = 10),
# ## 20 clusters
# read_excel(
#   paste0(cv_results_path, "/rf-20_clusters-spatial-kFold-results.xlsx")) %>%
#   mutate(cross_validation = "Spatial k-Fold CV", model_for = "random forest", n_clusters = 20),
# ## 30 clusters
read_excel(
paste0(cv_results_path, "/rf-30_clusters-spatial-kFold-results.xlsx")) %>%
mutate(cross_validation = "Spatial k-Fold CV", model_for = "random forest", n_clusters = 30)
)
# Data --------------------------------------------------------------------
# Definindo a versão dos dados em uso
data_version <- "C1_v001-year"
# Criando o caminho para os resultados de validação cruzada
cv_results_path <- "/results/2024_03_18_cv_C1_v2_0_0/"
# Listando arquivos .xlsx no caminho especificado
list.files(path = cv_results_path, pattern = ".xlsx")
# Cross-validation results ------------------------------------------------
# Carregando e organizando resultados da validação cruzada de diferentes modelos
cv_results <- list(
# Resultados da validação cruzada k-Fold comum
rf__kFold_results = read_excel(
paste0(cv_results_path, "/rf-kFold-results.xlsx")) %>%
mutate(cross_validation = "Standard k-Fold CV", model_for = "random forest", n_clusters = 0),
read_excel(
paste0(cv_results_path, "/rf-30_clusters-spatial-kFold-results.xlsx")) %>%
mutate(cross_validation = "Spatial k-Fold CV", model_for = "random forest", n_clusters = 30)
)
